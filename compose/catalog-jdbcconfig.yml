name: gscloud_dev_jdbcconfig

volumes:
  jdbcconfig_data: # volume for postgresql data, used to store the geoserver config through jdbcconfig
  datadir:

x-volume-mounts: &geoserver_volumes
  - datadir:/opt/app/data_directory

x-gs-dependencies: &gs-dependencies
  database:
    condition: service_started
  init-sample-data:
    condition: service_completed_successfully
  
#
# Configures all geoserver services to use the postgresql database server with jdbcconfig as catalog backend.
# Run with `docker compose -f compose.yml -f catalog-jdbcconfig.yml up -d`
#
x-geoserver-env: &geoserver_environment
  SPRING_PROFILES_ACTIVE: "${GEOSERVER_DEFAULT_PROFILES},jdbcconfig"
  JDBCCONFIG_URL: "${JDBCCONFIG_URL}"
  JDBCCONFIG_USERNAME: "${JDBCCONFIG_USERNAME}"
  JDBCCONFIG_PASSWORD: "${JDBCCONFIG_PASSWORD}"


services:
  init-sample-data:
    image: alpine:3.18.4
    user: ${GS_USER}
    command: sh -c "cd /opt/app/data_directory; if [ ! -f global.xml ]; then tar xfvz /tmp/datadir.tgz; fi"
    volumes:
      - datadir:/opt/app/data_directory
      - ./catalog-datadir.tgz:/tmp/datadir.tgz

  database:
    extends:
      file: templates.yml
      service: postgrestemplate
    environment:
      POSTGRES_DB: "${JDBCCONFIG_DBNAME}"
      POSTGRES_USER: "${JDBCCONFIG_USERNAME}"
      POSTGRES_PASSWORD: "${JDBCCONFIG_PASSWORD}"
    ports:
      - 54321:5432
    volumes:
      - jdbcconfig_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G

  wfs:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  wms:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  wcs:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  wps:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  rest:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  webui:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies

  gwc:
    environment: *geoserver_environment
    volumes: *geoserver_volumes
    depends_on: *gs-dependencies
