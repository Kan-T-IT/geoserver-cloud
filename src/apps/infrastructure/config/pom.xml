<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud.apps</groupId>
    <artifactId>gs-cloud-infrastructure</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud-config-service</artifactId>
  <packaging>jar</packaging>
  <name>Cloud config service</name>
  <properties>
    <dockerfile.skip>false</dockerfile.skip>
    <docker.image.name>geoserver-cloud-config</docker.image.name>
    <spring-boot.build-image.imageName>geoservercloud/geoserver-cloud-config:${project.version}</spring-boot.build-image.imageName>
    <start-class>org.geoserver.cloud.config.ConfigApplication</start-class>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-config-server</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>spring-boot-starter-validation</artifactId>
          <groupId>org.springframework.boot</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-aop</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <executions>
            <execution>
              <id>build-info</id>
              <goals>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
            <layers>
              <enabled>true</enabled>
            </layers>
            <image>
              <pullPolicy>IF_NOT_PRESENT</pullPolicy>
              <env>
                <!-- Builder config options -->
                <BP_JVM_VERSION>17</BP_JVM_VERSION>
                <BP_JVM_TYPE>JRE</BP_JVM_TYPE>
                <BPL_JVM_THREAD_COUNT>8</BPL_JVM_THREAD_COUNT>
                <!-- Runtime config options -->
                <!-- Allow running on low-resource provisioned containers, this service doesn't need much -->
                <BPE_DELIM_JAVA_TOOL_OPTIONS xml:space="preserve" />
                <BPE_JAVA_TOOL_OPTIONS>-Xss256K -XX:ReservedCodeCacheSize=64M -XX:MaxMetaspaceSize=128M</BPE_JAVA_TOOL_OPTIONS>
                <BPE_JVM_THREAD_COUNT>8</BPE_JVM_THREAD_COUNT>
              </env>
            </image>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/config</outputDirectory>
              <resources>
                <resource>
                  <directory>${maven.multiModuleProjectDirectory}/config/</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>build-info</id>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>docker</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>docker</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>repackage</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <classifier>bin</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>docker-openj9</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>openj9</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>repackage</id>
                <goals>
                  <goal>repackage</goal>
                </goals>
                <configuration>
                  <classifier>bin</classifier>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>dockerfile-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build-openj9-image</id>
                <goals>
                  <goal>build</goal>
                </goals>
                <configuration>
                  <dockerfile>Dockerfile.openj9</dockerfile>
                  <tag>${project.version}-openj9</tag>
                  <buildArgs>
                    <TAG>${project.version}-openj9</TAG>
                    <JAR_FILE>target/${project.build.finalName}-bin.jar</JAR_FILE>
                  </buildArgs>
                </configuration>
              </execution>
              <execution>
                <id>push-openj9-image</id>
                <phase>package</phase>
                <goals>
                  <goal>push</goal>
                </goals>
                <configuration>
                  <skip>${dockerfile.push.skip}</skip>
                  <tag>${project.version}-openj9</tag>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>build-image</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>build-image</id>
                <goals>
                  <goal>build-image</goal>
                </goals>
              </execution>
              <!-- <execution> -->
              <!-- <id>build-image-openj9</id> -->
              <!-- <goals> -->
              <!-- <goal>build-image</goal> -->
              <!-- </goals> -->
              <!-- <configuration> -->
              <!-- <image> -->
              <!-- <name>${spring-boot.build-image.imageName}-openj9</name> -->
              <!-- <pullPolicy>IF_NOT_PRESENT</pullPolicy> -->
              <!-- <runImage>paketobuildpacks/eclipse-openj9:latest</runImage> -->
              <!-- <env> -->
              <!-- <BP_JVM_VERSION>11</BP_JVM_VERSION> -->
              <!-- <BPE_JAVA_TOOL_OPTIONS>-Xss256K -XX:ReservedCodeCacheSize=64M -XX:MaxMetaspaceSize=128M</BPE_JAVA_TOOL_OPTIONS> -->
              <!-- <BPE_OVERRIDE_BPL_JVM_THREAD_COUNT>25</BPE_OVERRIDE_BPL_JVM_THREAD_COUNT> -->
              <!-- <BPL_JVM_THREAD_COUNT>25</BPL_JVM_THREAD_COUNT> -->
              <!-- </env> -->
              <!-- </image> -->
              <!-- </configuration> -->
              <!-- </execution> -->
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
